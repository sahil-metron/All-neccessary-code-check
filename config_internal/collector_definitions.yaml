collector_globals:
  input_controller_execution_periods_in_seconds: 120                # This will establish the period of time when the input controller object will execute its internal functionality
  input_process_execution_periods_in_seconds: 300
  output_process_execution_periods_in_seconds: 300
  requests_limits:
    period: 1d
    number_of_requests: 15000
    behavior:
  message_batch_size: 100
  queue_generate_metrics: False
collector_inputs:
  wiz_data_puller:
    input_thread_globals:
      input_thread_execution_periods_in_seconds: 120                # This will establish the period of time when the input thread objects will execute its internal functionality
      requests_limits:
        period: 1d
        number_of_requests: 15000
        behavior:
    service_thread_globals:
      service_thread_execution_periods_in_seconds: 120              # This will establish the period of time when the service thread objects will execute its internal functionality
      requests_limits:
        period: 1d
        number_of_requests: 1000
        behavior:
    module_globals:
      request_period_in_seconds: 60                                 # This will establish the period of time when the modules thread objects will execute its internal functionality
      use_time_slots_for_retrievals: false
      requests_per_second: 100000
    services:
      custom_service:
        type: custom
        modules:
          WizDataPuller:
            type: type_1
            setup_class: WizDataPullerSetup
      issues:
        type: predefined
        modules:
          WizDataPuller:
            type: type_1
            setup_class: WizDataPullerSetup
            module_properties:
              user_agent: devo_collector_1.0                        # The user agent to send to Wiz API calls
              api_url_regex: (^https:\/\/)([\da-z\.-]+)\.([a-z\.])([\/\w \.-]*)*([a-z])(:\d{1,5})?$
              historic_date_time_format: "%Y-%m-%dT%H:%M:%S.%fZ"
              default_historic_days: 10
              api_base_url: https://api.us1.app.wiz.io
              access_token_timeout: 1800
              flatten_data: true
              devo_tag: my.app.wiz.issue
              graphql_query: "query IssuesTable(
                            $filterBy: IssueFilters
                            $first: Int
                            $after: String
                            $orderBy: IssueOrder
                          ) {
                            issues(
                              filterBy: $filterBy
                              first: $first
                              after: $after
                              orderBy: $orderBy
                            ) {
                              nodes {
                                ...IssueDetails
                              }
                              pageInfo {
                                hasNextPage
                                endCursor
                              }
                              totalCount
                              informationalSeverityCount
                              lowSeverityCount
                              mediumSeverityCount
                              highSeverityCount
                              criticalSeverityCount
                              uniqueEntityCount
                            }
                          }

                          fragment IssueDetails on Issue {
                            id
                            control {
                              id
                              name
                              query
                              securitySubCategories {
                                id
                                title
                                category {
                                  id
                                  name
                                  framework {
                                    id
                                    name
                                  }
                                }
                              }
                            }
                            createdAt
                            updatedAt
                            projects {
                              id
                              name
                              slug
                              businessUnit
                              riskProfile {
                                businessImpact
                              }
                            }
                            status
                            severity
                            entity {
                              id
                              name
                              type
                            }
                            entitySnapshot {
                              id
                              type
                              nativeType
                              name
                              subscriptionId
                              subscriptionExternalId
                              subscriptionName
                              resourceGroupId
                              resourceGroupExternalId
                              region
                              cloudPlatform
                              cloudProviderURL
                              providerId
                              status
                              tags
                              subscriptionTags
                            }
                            note
                            serviceTicket {
                              externalId
                              name
                              url
                            }
                            serviceTickets {
                              externalId
                              name
                              url
                              action {
                                id
                                type
                              }
                            }
                          }"